<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>添加分类和标签</title>
    <link href="/2025/04/10/%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%92%8C%E6%A0%87%E7%AD%BE/"/>
    <url>/2025/04/10/%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%92%8C%E6%A0%87%E7%AD%BE/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo-使用攻略——添加分类与标签"><a href="#Hexo-使用攻略——添加分类与标签" class="headerlink" title="Hexo 使用攻略——添加分类与标签"></a>Hexo 使用攻略——添加分类与标签</h1><h2 id="创建分类页，定义categories属性"><a href="#创建分类页，定义categories属性" class="headerlink" title="创建分类页，定义categories属性"></a>创建分类页，定义categories属性</h2><ul><li><p>按下<code>win+R</code>，输入<code>cmd</code>，在命令行中输入如下代码。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo new page categories<br></code></pre></td></tr></table></figure></li><li><p>依据给出的路径，找到index.md文件，加入type行如下。</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs md">title: categories<br>date: 2025-04-10 20:51:00<br>type: &quot;categories&quot;<br></code></pre></td></tr></table></figure></li><li><p>保存并关闭文件。</p></li></ul><h2 id="给文章添加”categories”属性"><a href="#给文章添加”categories”属性" class="headerlink" title="给文章添加”categories”属性"></a>给文章添加”categories”属性</h2><ul><li><p>打开需要添加分类的文章，为其添加<code>categories</code>属性。</p></li><li><p>下方的<code>categories: 博客网站搭建</code>表示添加这篇文章到“博客网站搭建”这个分类。</p></li><li><p>注意：Hexo一篇文章只能属于一个分类，也就是说如果在“- 博客网站搭建”下方添加“-xxx”，Hexo不会产生两个分类， 而是把分类嵌套（即该文章属于 “- 博客网站搭建”下的 “-xxx ”分类）。</p></li></ul><p><img src="https://myblog.dawnlight.me//%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20250410210029.png"></p><p>这样我们就成功给文章添加了分类，点击首页的“分类”可以看到该分类下面的所有文章。</p><h2 id="创建标签选项，定义tags属性"><a href="#创建标签选项，定义tags属性" class="headerlink" title="创建标签选项，定义tags属性"></a>创建标签选项，定义tags属性</h2><ul><li><p>按下<code>win+R</code>，输入<code>cmd</code>，在命令行中输入如下代码。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo new page tags<br></code></pre></td></tr></table></figure></li><li><p>依据给出的路径，找到index.md文件，加入type行如下。</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs md">title: tags<br>date: 2025-04-10 21:05:45<br>type: &quot;tags&quot;<br></code></pre></td></tr></table></figure></li><li><p>保存并关闭文件。</p></li></ul><h2 id="给文章添加”tags”属性"><a href="#给文章添加”tags”属性" class="headerlink" title="给文章添加”tags”属性"></a>给文章添加”tags”属性</h2><ul><li><p>打开需要添加标签的文章，为其添加<code>tags</code>属性。</p></li><li><p>一篇文章可以加多个tag。</p></li></ul><p>这样我们就成功给文章添加了分类，点击首页的“分类”可以看到该分类下面的所有文章。</p>]]></content>
    
    
    <categories>
      
      <category>博客网站搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网站搭建</title>
    <link href="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
    <url>/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="从零开始搭建属于你自己的博客（GitHub-Pages-Hexo"><a href="#从零开始搭建属于你自己的博客（GitHub-Pages-Hexo" class="headerlink" title="从零开始搭建属于你自己的博客（GitHub Pages+Hexo)"></a>从零开始搭建属于你自己的博客（GitHub Pages+Hexo)</h1><p>​本文记录了如何使用<code>GitHub Pages</code> + <code>Hexo</code>搭建个人博客网站，可以不使用服务器，完全免费，希望能给想要搭建属于自己的博客的你一点帮助。</p><h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><h3 id="1-准备Github账号"><a href="#1-准备Github账号" class="headerlink" title="1.准备Github账号"></a>1.准备Github账号</h3><h3 id="2-安装Git"><a href="#2-安装Git" class="headerlink" title="2.安装Git"></a>2.安装Git</h3><h3 id="3-安装NodeJS"><a href="#3-安装NodeJS" class="headerlink" title="3.安装NodeJS"></a>3.安装NodeJS</h3><h2 id="二、创建仓库"><a href="#二、创建仓库" class="headerlink" title="二、创建仓库"></a>二、创建仓库</h2><p>​在<code>GitHub</code>上创建一个新的代码仓库用于保存我们的网页。</p><ul><li><p>点击右上角头像之后，点击<code>Your repositories</code>，进入仓库页面。<img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/1.png"></p></li><li><p>点击New按钮，进入仓库构建界面（就是那个绿油油的按钮）。<img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/2.png"></p></li><li><p>填写仓库名，格式必须为<code>&lt;用户名&gt;.github.io</code>，然后点击<code>Create repository</code>。<img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/3.png"></p></li><li><p>然后就可以先放着了，等到后面操作，当然你也可以写一个<code>index.html</code>文件先体验一下网站的小样，下面给出一个示例。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>nicknamepotato<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>nicknamepotato的个人主页<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Hello ~<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>在<code>GitHub Pages</code>中找到我们主页的地址，点击访问。<img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/4.png"></p></li></ul><blockquote><p>[!CAUTION]</p><ol><li>仓库权限需要设置为public，否则使用<code>GitHub Pages</code>时需要付费开通</li><li>注意红框标出的部分，设置要准确</li></ol></blockquote><ul><li>点击<code>Visit site</code>或者复制网址到浏览器访问。</li></ul><h2 id="三、安装Hexo"><a href="#三、安装Hexo" class="headerlink" title="三、安装Hexo"></a>三、安装<code>Hexo</code></h2><p>​我们采用<code>Hexo</code>来创建我们的博客网站，<code>Hexo</code> 是一个基于<code>NodeJS</code>的静态博客网站生成器，使用<code>Hexo</code>不需开发，只要进行一些必要的配置即可生成一个个性化的博客网站，非常方便。官网地址为<a href="https://hexo.io/zh-cn/%E3%80%82">https://hexo.io/zh-cn/。</a></p><ul><li><p>安装<code>Hexo</code>（下面的这些如果用的是windows系统，使用<code>windows键+R</code>呼出命令，输入<code>cmd</code>进入命令行）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install -g hexo-cli<br></code></pre></td></tr></table></figure></li><li><p>查看版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo -v<br></code></pre></td></tr></table></figure></li><li><p>创建一个项目并初始化</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo init my-blog #这里你叫什么都行，如果不想安装在当前目录，记得更改<br>cd hexo-blog<br>npm install<br></code></pre></td></tr></table></figure></li><li><p>本地启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo g<br>hexo server<br></code></pre></td></tr></table></figure></li><li><p>浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a> ，如果出现<code>404 NOT FOUND</code>，&#x3D;&#x3D;可以参考这个大佬的解决方法<a href="https://blog.csdn.net/AndyNikolas/article/details/80247317">彻底解决hexo s 启动服务后 打开localhost:4000 无响应的问题</a>&#x3D;&#x3D;</p></li></ul><h2 id="四、更换主题"><a href="#四、更换主题" class="headerlink" title="四、更换主题"></a>四、更换主题</h2><p>​如果你对于当前界面的美观程度已经满意的话，就可以跳过这一部分。如果对于目前的默认主题不太满意，官方提供了数百种主题供用户选择，可以根据个人喜好更换，官网主题点 <a href="https://hexo.io/themes/">这里</a> 查看。下载方式网上均可以查到，这里介绍的是<code>Fluid</code>主题的应用，Fluid官网点<a href="https://github.com/fluid-dev/hexo-theme-fluid">这里</a>查看。</p><h3 id="1-安装主题"><a href="#1-安装主题" class="headerlink" title="1.安装主题"></a>1.安装主题</h3><p>​下载 <a href="https://github.com/fluid-dev/hexo-theme-fluid/releases"> release 版本</a> 解压到 <code>themes</code> 目录，并将解压出的文件夹重命名为 <code>fluid</code>。</p><h3 id="2-指定主题"><a href="#2-指定主题" class="headerlink" title="2.指定主题"></a>2.指定主题</h3><p>​修改 <code>Hexo</code> 博客目录中的 <code>_config.yml</code>。我是将<code>Hexo</code>安装到了D盘。<img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/5.png"></p><p>​然后直接从D盘进入，修改文件<code>_config.yml</code>条目如下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">theme: fluid  # 指定主题<br>language: zh-CN  # 指定语言，会影响主题显示的语言，按需修改<br></code></pre></td></tr></table></figure><p><img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/6.png"></p><h3 id="3-创建关于页"><a href="#3-创建关于页" class="headerlink" title="3.创建关于页"></a>3.创建关于页</h3><p>​首次使用“关于页”需要手动创建。关于页面是对于一个网站来说非常重要，它能让访客了解到正在访问的网站背后的个人信息或者公司信息。很多的个人网站都会有自我介绍页面，用于介绍作者的个人信息，如联系方式，职业等等。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo new page about<br></code></pre></td></tr></table></figure><p>​创建成功后，找到博客目录下<code>/source/about/index.md</code>，添加 <code>layout</code> 属性。<img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/7.png"></p><p>​本地启动。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo g -d<br>hexo s<br></code></pre></td></tr></table></figure><p>​浏览器访问<a href="http://localhost:4000/">http://localhost:4000</a>  ，<code>Fluid</code>主题风格页面如下，个人还是蛮喜欢这种动感的。<img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/8.png"></p><h2 id="五、创建文章"><a href="#五、创建文章" class="headerlink" title="五、创建文章"></a>五、创建文章</h2><h3 id="创建文本"><a href="#创建文本" class="headerlink" title="创建文本"></a>创建文本</h3><p>​如下修改 <code>Hexo</code> 博客目录中的 <code>_config.yml</code>，打开这个配置是为了在生成文章的时候生成一个同名的资源目录用于存放图片文件。参考官方文档<a href="https://hexo.io/zh-cn/docs/asset-folders.html%E3%80%82">https://hexo.io/zh-cn/docs/asset-folders.html。</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>​创建文章，比如现在这一篇《网站搭建》。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo new post 网站搭建<br></code></pre></td></tr></table></figure><p>​执行完成后在<code>source\_posts</code>目录下生成了一个md文件和一个同名的资源目录(用于存放图片)<img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/9.png"></p><h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><h4 id="1-方法一"><a href="#1-方法一" class="headerlink" title="1.方法一"></a>1.方法一</h4><p>​图片的引入方式在官方文档里面有，我习惯于markdown语法引入，所以这里我们安装一个可以上传本地图片的插件。</p><p>​执行如下命令安装插件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-asset-imaged --save<br></code></pre></td></tr></table></figure><p>​按照如下操作修改配置文件<code>项目根目录/node_modules/hexo-asset-image/index.js</code>，大概在23~24行的样子。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">if</span> (<span class="hljs-regexp">/.*\/index\.html$/</span>.<span class="hljs-title function_">test</span>(link)) &#123;<br>  <span class="hljs-comment">// when permalink is end with index.html, for example 2019/02/20/xxtitle/index.html</span><br>  <span class="hljs-comment">// image in xxtitle/ will go to xxtitle/index/</span><br>  appendLink = <span class="hljs-string">&#x27;index/&#x27;</span>;<br>  <span class="hljs-keyword">var</span> endPos = link.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-string">&#x27;/&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>  <span class="hljs-keyword">var</span> endPos = link.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-string">&#x27;.&#x27;</span>);<br>&#125;<br>link = link.<span class="hljs-title function_">substring</span>(beginPos, endPos) + <span class="hljs-string">&#x27;/&#x27;</span> + appendLink;<br></code></pre></td></tr></table></figure><p>​我们将else分支的 <code>link.lastIndexOf(&#39;.&#39;)</code> 修改为 <code>link.lastIndexOf(&#39;/&#39;)</code> 即可 。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">if</span> (<span class="hljs-regexp">/.*\/index\.html$/</span>.<span class="hljs-title function_">test</span>(link)) &#123;<br>  <span class="hljs-comment">// when permalink is end with index.html, for example 2019/02/20/xxtitle/index.html</span><br>  <span class="hljs-comment">// image in xxtitle/ will go to xxtitle/index/</span><br>  appendLink = <span class="hljs-string">&#x27;index/&#x27;</span>;<br>  <span class="hljs-keyword">var</span> endPos = link.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-string">&#x27;/&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>  <span class="hljs-keyword">var</span> endPos = link.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-string">&#x27;.&#x27;</span>);<br>&#125;<br>link = link.<span class="hljs-title function_">substring</span>(beginPos, endPos) + <span class="hljs-string">&#x27;/&#x27;</span> + appendLink;<br></code></pre></td></tr></table></figure><p>​如果你之前已经运行过<code>hexo g</code>了，就需要重新清理一下再运行。执行如下命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo clean &amp; hexo g<br></code></pre></td></tr></table></figure><blockquote><p>[!NOTE]</p><p>&#x3D;&#x3D;感谢大佬Asroads的博客指点<a href="https://blog.asroads.com/post/95d84581.html">https://blog.asroads.com/post/95d84581.html</a> 。&#x3D;&#x3D;但是经过我的实验发现，最多只能上传9张？至少我的设备是这样的，所以这个方法有些局限性。<del>（但是免费啊）</del></p></blockquote><h4 id="2-方法二"><a href="#2-方法二" class="headerlink" title="2.方法二"></a>2.方法二</h4><p>​这里我们选用阿里云对象存储 + <a href="https://link.juejin.cn/?target=https://github.com/Molunerfinn/PicGo/releases">Picgo</a> 的方式存储，感谢大佬夜梦的指点<a href="https://juejin.cn/post/7154719695261106189">https://juejin.cn/post/7154719695261106189</a> 。截止20250410，最稳定的版本为2.3.1，建议大家安装这个版本，不要安装beta版。</p><ul><li>打开阿里云首页，点击左上角目录栏，进入对象存储<img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/17.png"> <img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/18.png"></li><li>点击bucket列表，然后点击创建bucket。<img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/19.png"><ul><li>bucket名称和地域必填。地域选择一个距离自己近一些的地方。</li><li>读写权限选择为公共读，其余均默认。</li><li>如果在创建的时候怎么也无法选择公共读，那么可以先创建，成功后进入bucket找到“阻止公共访问”，关闭，再修改就可以了。<img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/20.png"></li></ul></li><li>点击网页右上角的头像，再点击<code>AccessKey</code>管理，进入该页面。<img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/21.png"></li><li>点击创建<code>AccessKey</code>，将创建号的key复制保存下来，之后在<code>Picgo</code>上需要用到。</li><li>打开<code>Picgo</code>，点击图床设置，选择阿里云OSS，填写如下信息。<img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/25.png"></li><li>如果遇到问题可以看我的<a href="https://blog.csdn.net/2301_81531626/article/details/147120152?spm=1001.2014.3001.5502">问题解决博客</a> 。</li></ul><h2 id="六、个性化页面展示"><a href="#六、个性化页面展示" class="headerlink" title="六、个性化页面展示"></a>六、个性化页面展示</h2><h3 id="1-浏览器tab页名称"><a href="#1-浏览器tab页名称" class="headerlink" title="1.浏览器tab页名称"></a>1.浏览器tab页名称</h3><p>​修改根目录下 <code>_config.yml</code> 中的 <code>title</code> 字段。<img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/10.png"></p><h3 id="2-博客标题"><a href="#2-博客标题" class="headerlink" title="2.博客标题"></a>2.博客标题</h3><p>​修改主题目录 <code>themes\fluid</code> 下 <code>_config.yml</code> 中的 <code>blog_title</code> 字段。<img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/12.png"></p><h3 id="3-主页正中间的文字"><a href="#3-主页正中间的文字" class="headerlink" title="3.主页正中间的文字"></a>3.主页正中间的文字</h3><p>​修改主题目录 <code>themes\fluid</code> 下 <code>_config.yml</code> 中的 <code>text</code> 字段。<img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/11.png"></p><h2 id="七、添加评论和阅读量统计功能"><a href="#七、添加评论和阅读量统计功能" class="headerlink" title="七、添加评论和阅读量统计功能"></a>七、添加评论和阅读量统计功能</h2><p>​评论和阅读量统计功能的代码在<code>Fluid</code>的内置代码里面都已经写好了，只不过因为缺少配置所以没有开启，需要借助第三方服务。具体开启方式参见下面这位大佬的文章。</p><blockquote><p>[!NOTE]</p><p>&#x3D;&#x3D;大佬的博客：<a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a> 。&#x3D;&#x3D;</p></blockquote><blockquote><p>[!WARNING]</p><p>​我个人建议尽量不要开启评论功能，因为涉及到平台监管的问题，会被网安约谈的。</p></blockquote><h2 id="八、发布到GitHub-Pages"><a href="#八、发布到GitHub-Pages" class="headerlink" title="八、发布到GitHub Pages"></a>八、发布到GitHub Pages</h2><p>​还记得我们在第二步中创建的仓库吗，现在终于要派上用场了！</p><h3 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h3><ul><li><p>安装<code>hexo-deployer-git</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure></li><li><p>修改 <code>_config.yml</code>，配置 <code>GitHub</code> 相关信息</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/nicknamepotato/nicknamepotato.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br>  <span class="hljs-attr">token:</span> <span class="hljs-string">ghp_3KakcaPHerunNRyMerofcFd9pblU282FSbsY</span><br></code></pre></td></tr></table></figure></li><li><p>其中 <code>token</code> 为 <code>GitHub</code> 的 <code>Personal access tokens</code>，获取方式如下图</p><ul><li><p>点击右上角头像，找到<code>settings</code><img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/13.png"></p></li><li><p>在右侧一栏一直拉到最底下，找到<code>Developer settings</code><img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/14.png"></p></li><li><p>申请了token之后一定要记得复制，只能看见一次，如果真的忘了可以在这个界面点击你已经申请的<code>token</code>，点击<code>Regenerate token</code><img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/15.png"></p></li></ul></li></ul><blockquote><p>[!TIP]</p><p>这里我尝试了一下，不管是<code>Fine-grained tokens</code>还是<code>Tokens(classic)</code>都是可以的，<strong>不过要记得按时更新你的<code>token</code>，因为你创建的时候这个<code>token</code>是有有效期的，当然如果心比较大设置个永久的也行。</strong></p></blockquote><h3 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h3><p>​直接将 <code>public</code> 目录中的文件和目录推送至 <code>GitHub</code> 仓库和分支中。至于这么推送可以直接复制或者搜一下怎么将本地的<code>GitHub</code>仓库推送到网站。<img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/16.png"></p><h2 id="九、自定义域名"><a href="#九、自定义域名" class="headerlink" title="九、自定义域名"></a>九、自定义域名</h2><p>​如果你觉得<a href="https://link.zhihu.com/?target=http://username.github.io">http://username.github.io</a>这种域名既难记又难看，<a href="https://link.zhihu.com/?target=https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site">Github Pages是支持我们使用自定义域名的</a>，下面就是具体的配置方法。&#x3D;&#x3D;感谢余小梦大佬的指点<a href="https://zhuanlan.zhihu.com/p/529826545">https://zhuanlan.zhihu.com/p/529826545</a> 。&#x3D;&#x3D;</p><h3 id="1-购买域名"><a href="#1-购买域名" class="headerlink" title="1.购买域名"></a>1.购买域名</h3><p>​域名购买的主流网站主要有<a href="https://link.zhihu.com/?target=https://wanwang.aliyun.com/">阿里云</a>、<a href="https://link.zhihu.com/?target=https://dnspod.cloud.tencent.com/">腾讯云</a>、<a href="https://link.zhihu.com/?target=https://sg.godaddy.com/zh">Godaddy</a>等，大家按需选取即可。</p><h3 id="2-配置DNS"><a href="#2-配置DNS" class="headerlink" title="2.配置DNS"></a>2.配置DNS</h3><p>​由于我是用的阿里云的域名，所以就用阿里云来作为演示。其他途径的可以在网上查一下教程。在域名列表页面点击解析，进入解析设置后点击添加记录，填写好各项内容后保存即可。<img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/22.png"></p><p><img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/23.png"></p><p><img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/24.png"></p><h3 id="3-绑定到GitHub-Pages"><a href="#3-绑定到GitHub-Pages" class="headerlink" title="3.绑定到GitHub Pages"></a>3.绑定到GitHub Pages</h3><p><img src="/2025/04/09/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/26.png"></p><p>​在<code>GitHub Pages</code>仓库中，进入<code>Settings,</code> 在<code>Custom domain</code>中填写你在步骤2中配置好的域名，比如<code>myblog.dawnlight.me</code>，点击<code>save</code>，<code>github</code>会花费一点时间做<code>DNS check</code>，成功时你能看到成功的提示。记得勾选下面的<code>Enforce HTTPS</code>。</p><h2 id="十、样式预览"><a href="#十、样式预览" class="headerlink" title="十、样式预览"></a>十、样式预览</h2><p>​依据上面的步骤，你的博客就具备雏形啦，至于后序怎么使用，欢迎来看一下我接下来的文章。</p><p>​欢迎来到我的blog：<a href="https://nicknamepotato.github.io/">https://nicknamepotato.github.io/</a></p>]]></content>
    
    
    <categories>
      
      <category>博客网站搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/04/09/hello-world/"/>
    <url>/2025/04/09/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
